{"version":3,"sources":["images/logo.svg","components/Header.js","images/plus.svg","images/Vector-avatar.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","cardItem","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","link","name","type","length","Main","props","avatar","onEditAvatar","avatarEditImg","onEditProfile","about","onAddPlace","plusImg","cards","map","item","Footer","PopupWithForm","isOpen","onClose","title","onSubmit","children","buttonText","AddPlacePopup","useState","setName","setLink","e","preventDefault","onChange","target","value","placeholder","minLength","maxLength","required","EditProfilePopup","description","setDescription","useEffect","onUpdateUser","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","defaultValue","ImagePopup","card","api","options","this","url","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","method","data","body","JSON","stringify","cardID","userName","userAbout","avatarUrl","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelctedCard","setCurrentUser","setCards","closeAllPopups","getUserProfile","result","catch","err","console","log","getInitialCards","Provider","renderLikes","newCard","state","c","deleteCard","filter","user","updateUserProfile","addNewCard","updateAvatarProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.464720c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import headerLogo from '../images/logo.svg';\n\nfunction Header() {\n  \n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип\" />\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","export default __webpack_public_path__ + \"static/media/Vector-avatar.a086f758.svg\";","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ cardItem, onCardClick, onCardLike, onCardDelete }) {\n\n  // Подписываемся на контекст CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = cardItem.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `element__trash ${isOwn ? 'element__trash_visible' : ''}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = cardItem.likes.some(i => i._id === currentUser._id);\n\n  const cardLikeButtonClassName = (\n    `element__like ${isLiked ? 'element__like_active' : ''}`\n  );\n\n  function handleClick() {\n    onCardClick(cardItem);\n  }\n\n  function handleLikeClick() {\n    onCardLike(cardItem);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(cardItem);\n  }\n\n  return (\n    <div className=\"element\">\n      <img className=\"element__image\" onClick={handleClick} src={cardItem.link} alt={cardItem.name} />\n      <button className={cardDeleteButtonClassName} onClick={handleDeleteClick} type=\"button\"></button>\n      <div className=\"element__info\">\n        <h2 className=\"element__text\">{cardItem.name}</h2>\n        <div>\n          <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\"></button>\n          <h2 className=\"element__like-count\">{cardItem.likes.length}</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import plusImg from '../images/plus.svg';\nimport avatarEditImg from '../images/Vector-avatar.svg';\nimport React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction Main(props) {\n\n  // Подписываемся на контекст CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <button className=\"profile__avatar-button\">\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\" />\n          <img className=\"profile__avatar-edit\" onClick={props.onEditAvatar} src={avatarEditImg} alt=\"Иконка редактирования\" />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\n          <button className=\"profile__button-edit\" onClick={props.onEditProfile} type=\"button\"></button>\n          <p className=\"profile__description\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__button-add\" onClick={props.onAddPlace} type=\"button\">\n          <img src={plusImg} alt=\"Знак '+'\" />\n        </button>\n      </section>\n      <section className=\"elements\">\n        { props.cards.map((item) => (\n          <Card\n            key={item._id} cardItem={item} onCardClick={props.onCardClick}\n            onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}\n          />\n        )\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","function Footer() {\n\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">© 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","function PopupWithForm(props) {\n\n  return (\n    <section className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_is-opened' : ''}`}  >\n      <div className=\"popup__container\">\n        <button className=\"popup__close \" onClick={props.onClose} type=\"button\"></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className=\"popup__content\" name={`${props.name}`} onSubmit={props.onSubmit} >\n          {props.children}\n          <button type=\"submit\" className=\"popup__save\" >{props.buttonText}</button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import PopupWithForm from './PopupWithForm';\nimport React from 'react';\n\nfunction AddPlacePopup(props) {\n\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onAddPlace({\n      name: name,\n      link: link,\n    });\n    setName('');\n    setLink('');\n  }\n\n  return (\n    <PopupWithForm title=\"Новое место\" name=\"place\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonText='Создать'>\n      <section className=\"popup__input-section\">\n        <input type=\"text\" className=\"popup__input popup__input_place_name\" onChange={handleNameChange} value={name} name=\"name\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n        <span className=\"popup__input-error name-input-error\"></span>\n      </section>\n      <section className=\"popup__input-section\">\n        <input type=\"url\" className=\"popup__input popup__input_place_link\" onChange={handleLinkChange} value={link} name=\"link\" placeholder=\"Ссылка на картинку\" required />\n        <span className=\"popup__input-error link-input-error\"></span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm';\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  // Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  // Обработчик изменения инпута обновляет стейт\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name=\"edit\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonText='Сохранить'>\n      <section className=\"popup__input-section\">\n        <input type=\"text\" className=\"popup__input popup__input_edit_name\" onChange={handleNameChange}  value={name || ''}  name=\"name\" placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" />\n        <span className=\"popup__input-error name-input-error\"></span>\n      </section>\n      <section className=\"popup__input-section\">\n        <input type=\"text\" className=\"popup__input popup__input_edit_description\" onChange={handleDescriptionChange} value={description || ''} name=\"description\" placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\" />\n        <span className=\"popup__input-error description-input-error\"></span>\n      </section>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import PopupWithForm from './PopupWithForm';\nimport React from 'react';\n\nfunction EditAvatarPopup(props) {\n\n  const avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current/* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} buttonText='Сохранить'>\n      <section className=\"popup__input-section\">\n        <input ref={avatarRef} type=\"url\" className=\"popup__input popup__input_place_link\" defaultValue=\"\" name=\"link\" placeholder=\"Ссылка на аватар\" required />\n        <span className=\"popup__input-error link-input-error\"></span>\n      </section>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","function ImagePopup(props) {\n\n  return (\n    <section className={`popup popup_type_picture ${props.card ? 'popup_is-opened' : ''}`}>\n      <div className=\"popup-content\">\n        <form className=\"popup__picture\" name=\"picture\">\n          <button className=\"popup__close\" onClick={props.onClose} type=\"button\"></button>\n          <img className=\"popup__image\" src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} />\n          <h2 className=\"popup__image-title\">{props.card ? props.card.name : ''}</h2>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;","class Api {\n\n  constructor(options) {\n    this.url = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  //получение массива карточек \n  getInitialCards() {\n    return fetch(this.url + '/cards', {\n      headers: this.headers\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //получаем данные пользователя\n  getUserProfile() {\n    return fetch(this.url + '/users/me', {\n      headers: this.headers,\n      method: 'GET'\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //добавить карточку\n  addNewCard(data) {\n    return fetch(this.url + '/cards', {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //удаляем карточку\n  deleteCard(cardID) {\n    return fetch(this.url + '/cards/' + cardID, {\n      headers: this.headers,\n      method: 'DELETE',\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //обновляем данные пользователя\n  updateUserProfile(userName, userAbout) {\n    return fetch(this.url + '/users/me', {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout\n      })\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //обновляем аватар пользователя\n  updateAvatarProfile(avatarUrl) {\n    return fetch(this.url + '/users/me/avatar', {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatarUrl\n      })\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n\n  //добавление или удаление лайка\n  renderLikes(cardID, method) {\n    return fetch(this.url + '/cards/likes/' + cardID, {\n      headers: this.headers,\n      method: method\n    })\n      .then(res => {\n        return this._getResponseData(res);\n      });\n  }\n  // другие методы работы с API\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-27',\n  headers: {\n    authorization: 'c38fc67e-bfd7-4e8c-84be-5445e5cdf811',\n    'Content-Type': 'application/json'\n  }\n});\n\n\nexport default api;","import '../App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ImagePopup from './ImagePopup';\nimport React from 'react';\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelctedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  // Инициализация профиля и начальных карточек\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getUserProfile()\n      .then((result) => {\n        setCurrentUser(result);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((result) => {\n        setCards(result);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelctedCard(card)\n  }\n  function handleUpdateUser(user) {\n    api.updateUserProfile(user.name, user.about)\n      .then(result => {\n        setCurrentUser(result);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  function handleUpdateAvatar(user) {\n    api.updateAvatarProfile(user.avatar.value)\n      .then((result) => {\n        setCurrentUser(result);\n        //popupAvatarSubmitBtn.textContent = \"Сохранить\";\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.renderLikes(card._id, isLiked ? 'DELETE' : 'PUT').then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    // Отправляем запрос в API на удаление карточки\n    api.deleteCard(card._id)\n    .then(() => {\n      setCards(cards.filter(item => item._id !== card._id))\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelctedCard(null);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <Header />\n        <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        <Footer />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n        <PopupWithForm title=\"Вы уверены\" name=\"delete-card\" buttonText='Да'/>\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}